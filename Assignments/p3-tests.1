#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 8.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 34 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mrl"
 #"ib\"))\x00"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 79
(1
 #"((lib \"srcloc-snip.rkt\" \"framework\") (lib \"wxme-srcloc-snip.rkt"
 #"\" \"framework\"))\x00"
) 1 0 93
(2
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-snip"
 #"class-wxme.ss\" \"framework\"))\x00"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(3
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsis"
 #"-snip-wxme.rkt\" \"drracket\" \"private\"))\x00"
) 2 0 88
(4
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.rk"
 #"t\" \"drracket\" \"private\"))\x00"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 68 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 255 0 0 0 -1
-1 2 37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 255 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 128 0 0 0 0 -1
-1 2 38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 128 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 255 0 0 0 0 -1 -1
2 38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 255 0 0 0 0 -1 -1
2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 255 255 0 0 0 -1
-1 2 37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 255 255 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 128 255 0 0 0 -1
-1 2 35 #"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 128 255 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 92 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 0 0 0 0 -1
-1 2 39 #"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 92 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 128 255 0 0 0 -1
-1 2 49 #"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 128 255 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 184 184 184 0 0 0 -1
-1 2 42 #"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 184 184 184 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 0 255 0 0 0 -1
-1 2 36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 0 255 0 0 0 -1
-1 2 16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
48 #"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 19 19 19 -1 -1
0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 19 19 19 -1 -1 4
1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1           0 1967 0 32 3 10 #"#lang play"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 7 #"require"
0 0 28 3 1 #" "
0 0 20 3 11 #"\"t1-p3.rkt\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 17 #"print-only-errors"
0 0 28 3 1 #" "
0 0 24 3 2 #"#t"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 84
(5
 #";--------------------------------------------------------------------"
 #"--------------;"
) 0 0 28 29 1 #"\n"
0 0 18 3 2 #"#|"
0 0 18 29 1 #"\n"
0 0 18 3 59
#"                        CC4101 - LENGUAJES DE PROGRAMACI\303\223N"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                                     TAREA 1"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 6 #"      "
0 0 18 3 63
(6
 #"                        Profesor: \xC3\x89ric Tanter                 "
) 0 0 18 29 1 #"\n"
0 0 18 3 61
#"                     Auxiliares: Bryan Ortiz - Tomas Vallejos"
0 0 18 29 1 #"\n"
0 0 18 3 59
(7
 #"                         Estudiante: Nicol\xC3\xA1s Garc\xC3\xADa R"
 #"\xC3\xADos"
) 0 0 18 29 1 #"\n"
0 0 18 3 2 #"|#"
0 0 28 29 1 #"\n"
0 0 18 3 84 5 0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 85
(8
 #";---------------------------------- PARSER TESTS --------------------"
 #"--------------; "
) 0 0 28 29 1 #"\n"
0 0 18 3 10 #"; num case"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 14 3 3 #"num"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 18 3 9 #"; id case"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 2 #") "
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 14 3 2 #"id"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 18 3 11 #"; bool case"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 2 #"#t"
0 0 28 3 2 #") "
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 14 3 4 #"bool"
0 0 28 3 1 #" "
0 0 24 3 2 #"#t"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 18 3 12 #"; binop case"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 4 #"})  "
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 14 3 5 #"binop"
0 0 28 3 1 #" "
0 0 14 3 1 #"+"
0 0 28 3 2 #" ("
0 0 14 3 3 #"num"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 3 #") ("
0 0 14 3 3 #"num"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 18 3 11 #"; unop case"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 1 #"!"
0 0 28 3 1 #" "
0 0 24 3 2 #"#t"
0 0 28 3 4 #"})  "
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 14 3 4 #"unop"
0 0 28 3 1 #" "
0 0 14 3 3 #"not"
0 0 28 3 2 #" ("
0 0 14 3 4 #"bool"
0 0 28 3 1 #" "
0 0 24 3 2 #"#t"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 18 3 9 #"; if case"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 2 #"if"
0 0 28 3 1 #" "
0 0 14 3 1 #"c"
0 0 28 3 2 #" ("
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 3 #") ("
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 1 #" "
0 0 24 3 1 #"4"
0 0 28 3 6 #")})   "
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 14 3 7 #"if-expr"
0 0 28 3 2 #" ("
0 0 14 3 2 #"id"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"c"
0 0 28 3 3 #") ("
0 0 14 3 5 #"binop"
0 0 28 3 1 #" "
0 0 14 3 1 #"+"
0 0 28 3 2 #" ("
0 0 14 3 3 #"num"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 3 #") ("
0 0 14 3 3 #"num"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 4 #")) ("
0 0 14 3 5 #"binop"
0 0 28 3 1 #" "
0 0 14 3 1 #"+"
0 0 28 3 2 #" ("
0 0 14 3 3 #"num"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 3 #") ("
0 0 14 3 3 #"num"
0 0 28 3 1 #" "
0 0 24 3 1 #"4"
0 0 28 3 4 #"))))"
0 0 28 29 1 #"\n"
0 0 18 3 11 #"; with case"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 4 #"with"
0 0 28 3 3 #" {{"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 1 #"5"
0 0 28 3 3 #"} {"
0 0 14 3 1 #"y"
0 0 28 3 1 #" "
0 0 24 3 1 #"7"
0 0 28 3 3 #"} {"
0 0 14 3 1 #"z"
0 0 28 3 1 #" "
0 0 24 3 2 #"42"
0 0 28 3 3 #"}} "
0 0 14 3 1 #"z"
0 0 28 3 5 #"})   "
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 14 3 4 #"with"
0 0 28 3 2 #" ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 4 #"list"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 3 #"Any"
0 0 28 3 2 #" ("
0 0 14 3 3 #"num"
0 0 28 3 1 #" "
0 0 24 3 1 #"5"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 19 #"                  ("
0 0 14 3 4 #"list"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"y"
0 0 28 3 1 #" "
0 0 14 3 3 #"Any"
0 0 28 3 2 #" ("
0 0 14 3 3 #"num"
0 0 28 3 1 #" "
0 0 24 3 1 #"7"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 19 #"                  ("
0 0 14 3 4 #"list"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"z"
0 0 28 3 1 #" "
0 0 14 3 3 #"Any"
0 0 28 3 2 #" ("
0 0 14 3 3 #"num"
0 0 28 3 1 #" "
0 0 24 3 2 #"42"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"            ("
0 0 14 3 2 #"id"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"z"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 4 #"with"
0 0 28 3 3 #" {{"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 1 #" "
0 0 24 3 1 #"5"
0 0 28 3 3 #"} {"
0 0 14 3 1 #"y"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 4 #"}} {"
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"y"
0 0 28 3 3 #"}})"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 14 3 4 #"with"
0 0 28 3 2 #" ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 4 #"list"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 2 #" ("
0 0 14 3 3 #"num"
0 0 28 3 1 #" "
0 0 24 3 1 #"5"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 19 #"                  ("
0 0 14 3 4 #"list"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"y"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 2 #" ("
0 0 14 3 3 #"num"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"            ("
0 0 14 3 5 #"binop"
0 0 28 3 1 #" "
0 0 14 3 1 #"+"
0 0 28 3 2 #" ("
0 0 14 3 2 #"id"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 3 #") ("
0 0 14 3 2 #"id"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"y"
0 0 28 3 4 #"))))"
0 0 28 29 1 #"\n"
0 0 18 3 13 #"; define case"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 4 #"sum3"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"y"
0 0 28 3 1 #" "
0 0 14 3 1 #"z"
0 0 28 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 28 3 2 #" {"
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"y"
0 0 28 3 2 #"} "
0 0 14 3 1 #"z"
0 0 28 3 3 #"}})"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 14 3 6 #"fundef"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"sum3"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 7 #"arg-any"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 3 #") ("
0 0 14 3 7 #"arg-any"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"y"
0 0 28 3 3 #") ("
0 0 14 3 7 #"arg-any"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"z"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 14 3 3 #"Any"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"              ("
0 0 14 3 5 #"binop"
0 0 28 3 1 #" "
0 0 14 3 1 #"+"
0 0 28 3 2 #" ("
0 0 14 3 5 #"binop"
0 0 28 3 1 #" "
0 0 14 3 1 #"+"
0 0 28 3 2 #" ("
0 0 14 3 2 #"id"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 3 #") ("
0 0 14 3 2 #"id"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"y"
0 0 28 3 4 #")) ("
0 0 14 3 2 #"id"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"z"
0 0 28 3 4 #"))))"
0 0 28 29 1 #"\n"
0 0 18 3 10 #"; app case"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 4 #"sum3"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 2 #"})"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"      ("
0 0 14 3 3 #"app"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"sum3"
0 0 28 3 2 #" ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 3 #"num"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 3 #") ("
0 0 14 3 3 #"num"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 3 #") ("
0 0 14 3 3 #"num"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 4 #"))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 83
(9
 #";--------------------------------- TYPEOF  TESTS --------------------"
 #"-------------;"
) 0 0 28 29 1 #"\n"
0 0 18 3 10 #"; num case"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 3 #"num"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 2 #") "
0 0 24 3 1 #"'"
0 0 28 3 4 #"() ("
0 0 14 3 5 #"mtEnv"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 14 3 3 #"Num"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 18 3 9 #"; id case"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 2 #"id"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 2 #") "
0 0 24 3 1 #"'"
0 0 28 3 4 #"() ("
0 0 14 3 4 #"aEnv"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 1 #" "
0 0 24 3 1 #"5"
0 0 28 3 1 #" "
0 0 14 3 5 #"mtEnv"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 14 3 3 #"Num"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 2 #"id"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 1 #"x"
0 0 28 3 2 #") "
0 0 24 3 1 #"'"
0 0 28 3 4 #"() ("
0 0 14 3 5 #"mtEnv"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 20 3 37 #"\"env-lookup-type: free identifier: x\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 18 3 11 #"; bool case"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 4 #"bool"
0 0 28 3 1 #" "
0 0 24 3 2 #"#t"
0 0 28 3 2 #") "
0 0 24 3 1 #"'"
0 0 28 3 4 #"() ("
0 0 14 3 5 #"mtEnv"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 14 3 4 #"Bool"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 18 3 11 #"; unop case"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 1 #"!"
0 0 28 3 1 #" "
0 0 24 3 2 #"#t"
0 0 28 3 3 #"}) "
0 0 24 3 1 #"'"
0 0 28 3 5 #"()  ("
0 0 14 3 5 #"mtEnv"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 14 3 4 #"Bool"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 1 #"!"
0 0 28 3 1 #" "
0 0 24 3 1 #"5"
0 0 28 3 3 #"}) "
0 0 24 3 1 #"'"
0 0 28 3 5 #"()  ("
0 0 14 3 5 #"mtEnv"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 20 3 44 #"\"Static type error: expected Bool found Num\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 12 #"; binop case"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 3 #"}) "
0 0 24 3 1 #"'"
0 0 28 3 4 #"() ("
0 0 14 3 5 #"mtEnv"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 14 3 3 #"Num"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 5 #"binop"
0 0 28 3 1 #" "
0 0 14 3 1 #"+"
0 0 28 3 2 #" ("
0 0 14 3 3 #"num"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 3 #") ("
0 0 14 3 3 #"num"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 3 #")) "
0 0 24 3 1 #"'"
0 0 28 3 4 #"() ("
0 0 14 3 5 #"mtEnv"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 14 3 3 #"Num"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 24 3 2 #"#f"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 4 #"})  "
0 0 24 3 1 #"'"
0 0 28 3 5 #"()  ("
0 0 14 3 5 #"mtEnv"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 20 3 44 #"\"Static type error: expected Num found Bool\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 2 #"&&"
0 0 28 3 1 #" "
0 0 24 3 2 #"#f"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 3 #"}) "
0 0 24 3 1 #"'"
0 0 28 3 5 #"()  ("
0 0 14 3 5 #"mtEnv"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 20 3 44 #"\"Static type error: expected Bool found Num\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 1 #">"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 1 #" "
0 0 24 3 2 #"#t"
0 0 28 3 3 #"}) "
0 0 24 3 1 #"'"
0 0 28 3 5 #"()  ("
0 0 14 3 5 #"mtEnv"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 20 3 44 #"\"Static type error: expected Num found Bool\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 9 #"; if case"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 2 #"if"
0 0 28 3 1 #" "
0 0 24 3 2 #"#t"
0 0 28 3 1 #" "
0 0 24 3 2 #"#t"
0 0 28 3 1 #" "
0 0 24 3 2 #"#t"
0 0 28 3 3 #"}) "
0 0 24 3 1 #"'"
0 0 28 3 4 #"() ("
0 0 14 3 5 #"mtEnv"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 14 3 4 #"Bool"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 2 #"if"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 2 #"#t"
0 0 28 3 1 #" "
0 0 24 3 2 #"#t"
0 0 28 3 3 #"}) "
0 0 24 3 1 #"'"
0 0 28 3 4 #"() ("
0 0 14 3 5 #"mtEnv"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 20 3 44 #"\"Static type error: expected Bool found Num\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 2 #"if"
0 0 28 3 1 #" "
0 0 24 3 2 #"#t"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 24 3 2 #"#t"
0 0 28 3 3 #"}) "
0 0 24 3 1 #"'"
0 0 28 3 4 #"() ("
0 0 14 3 5 #"mtEnv"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 20 3 36 #"\"Static type error: different types\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 11 #"; with case"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 4 #"with"
0 0 28 3 3 #" {{"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 1 #"5"
0 0 28 3 3 #"} {"
0 0 14 3 1 #"y"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"Bool"
0 0 28 3 1 #" "
0 0 24 3 2 #"#f"
0 0 28 3 3 #"} {"
0 0 14 3 1 #"z"
0 0 28 3 1 #" "
0 0 24 3 2 #"#f"
0 0 28 3 4 #"}} ("
0 0 14 3 2 #"&&"
0 0 28 3 1 #" "
0 0 14 3 1 #"y"
0 0 28 3 1 #" "
0 0 14 3 1 #"z"
0 0 28 3 3 #")})"
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 24 3 1 #"'"
0 0 28 3 2 #"()"
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 14 3 5 #"mtEnv"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 14 3 4 #"Bool"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 4 #"with"
0 0 28 3 3 #" {{"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 1 #"5"
0 0 28 3 3 #"} {"
0 0 14 3 1 #"y"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"Bool"
0 0 28 3 1 #" "
0 0 24 3 2 #"#f"
0 0 28 3 3 #"} {"
0 0 14 3 1 #"z"
0 0 28 3 1 #" "
0 0 24 3 2 #"#f"
0 0 28 3 4 #"}} ("
0 0 14 3 2 #"&&"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"z"
0 0 28 3 3 #")})"
0 0 28 29 1 #"\n"
0 0 28 3 18 #"                  "
0 0 24 3 1 #"'"
0 0 28 3 2 #"()"
0 0 28 29 1 #"\n"
0 0 28 3 18 #"                  "
0 0 14 3 5 #"mtEnv"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 14 3 4 #"Bool"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 4 #"with"
0 0 28 3 3 #" {{"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 1 #"5"
0 0 28 3 3 #"} {"
0 0 14 3 1 #"y"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"Bool"
0 0 28 3 1 #" "
0 0 24 3 2 #"#f"
0 0 28 3 3 #"} {"
0 0 14 3 1 #"z"
0 0 28 3 1 #" "
0 0 24 3 2 #"#f"
0 0 28 3 4 #"}} ("
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 14 3 1 #"y"
0 0 28 3 1 #" "
0 0 14 3 1 #"z"
0 0 28 3 3 #")})"
0 0 28 29 1 #"\n"
0 0 28 3 18 #"                  "
0 0 24 3 1 #"'"
0 0 28 3 2 #"()"
0 0 28 29 1 #"\n"
0 0 28 3 18 #"                  "
0 0 14 3 5 #"mtEnv"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 20 3 44 #"\"Static type error: expected Num found Bool\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 4 #"with"
0 0 28 3 3 #" {{"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 1 #" "
0 0 24 3 1 #"5"
0 0 28 3 3 #"} {"
0 0 14 3 1 #"y"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"Bool"
0 0 28 3 1 #" "
0 0 24 3 2 #"#f"
0 0 28 3 3 #"} {"
0 0 14 3 1 #"z"
0 0 28 3 1 #" "
0 0 24 3 2 #"#f"
0 0 28 3 4 #"}} ("
0 0 14 3 2 #"&&"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"z"
0 0 28 3 3 #")})"
0 0 28 29 1 #"\n"
0 0 28 3 18 #"                  "
0 0 24 3 1 #"'"
0 0 28 3 2 #"()"
0 0 28 29 1 #"\n"
0 0 28 3 18 #"                  "
0 0 14 3 5 #"mtEnv"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 20 3 44 #"\"Static type error: expected Bool found Num\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 13 #"; define case"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 3 #"one"
0 0 28 3 1 #" "
0 0 24 3 2 #"#t"
0 0 28 3 2 #"})"
0 0 28 29 1 #"\n"
0 0 28 3 19 #"                  ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 3 #"one"
0 0 28 3 2 #" {"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 3 #"}} "
0 0 24 3 1 #"1"
0 0 28 3 3 #"}))"
0 0 28 29 1 #"\n"
0 0 28 3 19 #"                  ("
0 0 14 3 5 #"mtEnv"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 20 3 44 #"\"Static type error: expected Num found Bool\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 3 #"one"
0 0 28 3 1 #" "
0 0 24 3 1 #"4"
0 0 28 3 2 #"})"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 3 #"one"
0 0 28 3 2 #" {"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 3 #"}} "
0 0 24 3 1 #"1"
0 0 28 3 3 #"}))"
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 14 3 5 #"mtEnv"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 14 3 3 #"Any"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 3 #"one"
0 0 28 3 1 #" "
0 0 24 3 1 #"4"
0 0 28 3 2 #"})"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 3 #"one"
0 0 28 3 2 #" {"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 3 #"}} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 3 #"}))"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"              ("
0 0 14 3 5 #"mtEnv"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 14 3 3 #"Num"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 6 #"typeof"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 14 3 1 #"f"
0 0 28 3 2 #" {"
0 0 14 3 1 #">"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 1 #" "
0 0 24 3 1 #"4"
0 0 28 3 3 #"}})"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"{"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 1 #"f"
0 0 28 3 2 #" {"
0 0 14 3 1 #"p"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"Bool"
0 0 28 3 4 #"}} {"
0 0 14 3 2 #"&&"
0 0 28 3 1 #" "
0 0 14 3 1 #"p"
0 0 28 3 2 #" {"
0 0 14 3 1 #"!"
0 0 28 3 1 #" "
0 0 14 3 1 #"p"
0 0 28 3 5 #"}}}))"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"              ("
0 0 14 3 5 #"mtEnv"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 14 3 3 #"Any"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 82
(10
 #";---------------------------------  RUN  TESTS  ---------------------"
 #"------------;"
) 0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 35 #"; tipo declarado Num en vez de Bool"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 28 3 2 #" ("
0 0 14 3 13 #"run-typecheck"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 2 #"{{"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 4 #"gt10"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 2 #"} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 2 #" {"
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                           {"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 8 #"positive"
0 0 28 3 2 #" {"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"@"
0 0 28 3 1 #" "
0 0 14 3 4 #"gt10"
0 0 28 3 3 #"}} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 2 #" {"
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                           {"
0 0 14 3 8 #"positive"
0 0 28 3 1 #" "
0 0 24 3 2 #"15"
0 0 28 3 3 #"}})"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 20 3 46 #"\"Static contract error: invalid type for gt10\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 35 #"; tipo declarado Any en vez de Bool"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 28 3 2 #" ("
0 0 14 3 13 #"run-typecheck"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 2 #"{{"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 4 #"gt10"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 2 #"} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Any"
0 0 28 3 2 #" {"
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                           {"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 8 #"positive"
0 0 28 3 2 #" {"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"@"
0 0 28 3 1 #" "
0 0 14 3 4 #"gt10"
0 0 28 3 3 #"}} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 2 #" {"
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                           {"
0 0 14 3 8 #"positive"
0 0 28 3 1 #" "
0 0 24 3 2 #"15"
0 0 28 3 3 #"}})"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 20 3 46 #"\"Static contract error: invalid type for gt10\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 19 #"; tipo no declarado"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 28 3 2 #" ("
0 0 14 3 13 #"run-typecheck"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 2 #"{{"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 4 #"gt10"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 3 #"} {"
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                           {"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 8 #"positive"
0 0 28 3 2 #" {"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"@"
0 0 28 3 1 #" "
0 0 14 3 4 #"gt10"
0 0 28 3 3 #"}} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 2 #" {"
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                           {"
0 0 14 3 8 #"positive"
0 0 28 3 1 #" "
0 0 24 3 2 #"15"
0 0 28 3 3 #"}})"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 20 3 46 #"\"Static contract error: invalid type for gt10\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 28 #"; recibe mas de un argumento"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 28 3 2 #" ("
0 0 14 3 13 #"run-typecheck"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 2 #"{{"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 4 #"gt10"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"y"
0 0 28 3 2 #"} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"Bool"
0 0 28 3 2 #" {"
0 0 14 3 1 #">"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                           {"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 8 #"positive"
0 0 28 3 2 #" {"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"@"
0 0 28 3 1 #" "
0 0 14 3 4 #"gt10"
0 0 28 3 3 #"}} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 2 #" {"
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                           {"
0 0 14 3 8 #"positive"
0 0 28 3 1 #" "
0 0 24 3 2 #"15"
0 0 28 3 3 #"}})"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 20 3 46 #"\"Static contract error: invalid type for gt10\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 23 #"; argumento de tipo Num"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 28 3 2 #" ("
0 0 14 3 13 #"run-typecheck"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 2 #"{{"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 4 #"gt10"
0 0 28 3 2 #" {"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 3 #"}} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"Bool"
0 0 28 3 2 #" {"
0 0 14 3 1 #">"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                           {"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 8 #"positive"
0 0 28 3 2 #" {"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"@"
0 0 28 3 1 #" "
0 0 14 3 4 #"gt10"
0 0 28 3 3 #"}} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 2 #" {"
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                           {"
0 0 14 3 8 #"positive"
0 0 28 3 1 #" "
0 0 24 3 2 #"15"
0 0 28 3 3 #"}})"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 20 3 46 #"\"Static contract error: invalid type for gt10\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 24 #"; argumento de tipo Bool"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 28 3 2 #" ("
0 0 14 3 13 #"run-typecheck"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 2 #"{{"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 4 #"gt10"
0 0 28 3 2 #" {"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"Bool"
0 0 28 3 3 #"}} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"Bool"
0 0 28 3 2 #" {"
0 0 14 3 2 #"&&"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 2 #"#f"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                           {"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 8 #"positive"
0 0 28 3 2 #" {"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"@"
0 0 28 3 1 #" "
0 0 14 3 4 #"gt10"
0 0 28 3 3 #"}} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 2 #" {"
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                           {"
0 0 14 3 8 #"positive"
0 0 28 3 1 #" "
0 0 24 3 2 #"15"
0 0 28 3 3 #"}})"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 20 3 46 #"\"Static contract error: invalid type for gt10\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 32 #"; argumento de tipo Any funciona"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 13 #"run-typecheck"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 2 #"{{"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 4 #"gt10"
0 0 28 3 2 #" {"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Any"
0 0 28 3 3 #"}} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"Bool"
0 0 28 3 2 #" {"
0 0 14 3 1 #">"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 24 #"                       {"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 8 #"positive"
0 0 28 3 2 #" {"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"@"
0 0 28 3 1 #" "
0 0 14 3 4 #"gt10"
0 0 28 3 3 #"}} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 2 #" {"
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 24 #"                       {"
0 0 14 3 8 #"positive"
0 0 28 3 1 #" "
0 0 24 3 2 #"15"
0 0 28 3 3 #"}})"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 24 3 1 #"5"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 38 #"; argumento sin tipo definido funciona"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 13 #"run-typecheck"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 2 #"{{"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 4 #"gt10"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 2 #"} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"Bool"
0 0 28 3 2 #" {"
0 0 14 3 1 #">"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 24 #"                       {"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 8 #"positive"
0 0 28 3 2 #" {"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"@"
0 0 28 3 1 #" "
0 0 14 3 4 #"gt10"
0 0 28 3 3 #"}} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 2 #" {"
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 24 #"                       {"
0 0 14 3 8 #"positive"
0 0 28 3 1 #" "
0 0 24 3 2 #"15"
0 0 28 3 3 #"}})"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 24 3 1 #"5"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 28 #"; Contract broken in runtime"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 28 3 2 #" ("
0 0 14 3 13 #"run-typecheck"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 2 #"{{"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 4 #"gt10"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 2 #"} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"Bool"
0 0 28 3 2 #" {"
0 0 14 3 1 #">"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         {"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 8 #"positive"
0 0 28 3 2 #" {"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"@"
0 0 28 3 1 #" "
0 0 14 3 4 #"gt10"
0 0 28 3 3 #"}} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 2 #" {"
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         {"
0 0 14 3 8 #"positive"
0 0 28 3 1 #" "
0 0 24 3 1 #"5"
0 0 28 3 3 #"}})"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 20 3 49 #"\"Runtime contract error: x does not satisfy gt10\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 28 #"; Contract broken in runtime"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 28 3 2 #" ("
0 0 14 3 13 #"run-typecheck"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 2 #"{{"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 3 #"add"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"y"
0 0 28 3 2 #"} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 2 #" {"
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"y"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                           {"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 5 #"oh-no"
0 0 28 3 2 #" {"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"@"
0 0 28 3 1 #" "
0 0 14 3 3 #"add"
0 0 28 3 2 #"} "
0 0 14 3 1 #"y"
0 0 28 3 1 #"}"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                            "
0 0 24 3 2 #"#t"
0 0 28 3 1 #"}"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                           {"
0 0 14 3 5 #"oh-no"
0 0 28 3 1 #" "
0 0 24 3 2 #"21"
0 0 28 3 1 #" "
0 0 24 3 2 #"21"
0 0 28 3 3 #"}})"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 20 3 45 #"\"Static contract error: invalid type for add\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 2 #"; "
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 13 #"run-typecheck"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 2 #"{{"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 8 #"positive"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 2 #"} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"Bool"
0 0 28 3 2 #" {"
0 0 14 3 1 #">"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 24 #"                       {"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 3 #"div"
0 0 28 3 2 #" {"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 3 #"Num"
0 0 28 3 1 #" "
0 0 14 3 1 #"@"
0 0 28 3 1 #" "
0 0 14 3 8 #"positive"
0 0 28 3 2 #"} "
0 0 14 3 1 #"y"
0 0 28 3 1 #"}"
0 0 28 29 1 #"\n"
0 0 28 3 26 #"                         {"
0 0 14 3 1 #"/"
0 0 28 3 1 #" "
0 0 14 3 1 #"y"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 24 #"                       {"
0 0 14 3 3 #"div"
0 0 28 3 1 #" "
0 0 24 3 1 #"5"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 3 #"}})"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 24 3 3 #"3/5"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 4 #"test"
0 0 28 3 2 #" ("
0 0 14 3 13 #"run-typecheck"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 2 #"{{"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 5 #"lt100"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 3 #"} {"
0 0 14 3 1 #"<"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 3 #"100"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 24 #"                       {"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 8 #"positive"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 2 #"} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"Bool"
0 0 28 3 2 #" {"
0 0 14 3 1 #">"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 24 #"                       {"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 11 #"percentage?"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 2 #"} "
0 0 14 3 1 #":"
0 0 28 3 1 #" "
0 0 14 3 4 #"Bool"
0 0 28 3 2 #" {"
0 0 14 3 2 #"&&"
0 0 28 3 2 #" {"
0 0 14 3 5 #"lt100"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 3 #"} {"
0 0 14 3 8 #"positive"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 3 #"}}}"
0 0 28 29 1 #"\n"
0 0 28 3 24 #"                       {"
0 0 16 3 6 #"define"
0 0 28 3 2 #" {"
0 0 14 3 4 #"calc"
0 0 28 3 2 #" {"
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 1 #"@"
0 0 28 3 1 #" "
0 0 14 3 8 #"positive"
0 0 28 3 3 #"} {"
0 0 14 3 1 #"y"
0 0 28 3 1 #" "
0 0 14 3 1 #"@"
0 0 28 3 1 #" "
0 0 14 3 11 #"percentage?"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 26 #"                         {"
0 0 14 3 1 #"/"
0 0 28 3 2 #" {"
0 0 14 3 1 #"*"
0 0 28 3 1 #" "
0 0 14 3 1 #"y"
0 0 28 3 1 #" "
0 0 14 3 1 #"y"
0 0 28 3 2 #"} "
0 0 14 3 1 #"x"
0 0 28 3 2 #"}}"
0 0 28 29 1 #"\n"
0 0 28 3 24 #"                       {"
0 0 14 3 4 #"calc"
0 0 28 3 1 #" "
0 0 24 3 2 #"25"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 3 #"}})"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 24 3 4 #"9/25"
0 0 28 3 1 #")"
0           0
